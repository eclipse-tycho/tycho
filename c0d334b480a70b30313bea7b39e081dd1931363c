{
  "comments": [
    {
      "key": {
        "uuid": "a7c23755_b75a5079",
        "filename": "tycho-release/tycho-versions-plugin/src/main/java/org/eclipse/tycho/versions/engine/ProjectMetadataReader.java",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 434
      },
      "writtenOn": "2016-12-02T08:26:35Z",
      "side": 1,
      "message": "that\u0027s an implmentation detail of maven polyglot/tycho-pomless I would rahter not rely on here",
      "range": {
        "startLine": 65,
        "startChar": 42,
        "endLine": 65,
        "endChar": 50
      },
      "revId": "c0d334b480a70b30313bea7b39e081dd1931363c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_e6dcfc5b",
        "filename": "tycho-release/tycho-versions-plugin/src/main/java/org/eclipse/tycho/versions/engine/ProjectMetadataReader.java",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 434
      },
      "writtenOn": "2016-12-12T09:03:15Z",
      "side": 1,
      "message": "just another quick thought: IIRC MavenProject.getFile() should give you the generated pom file without having to know the impl detail of pomless. Not sure if you have access to that here.",
      "range": {
        "startLine": 66,
        "startChar": 8,
        "endLine": 66,
        "endChar": 9
      },
      "revId": "c0d334b480a70b30313bea7b39e081dd1931363c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_1cbce422",
        "filename": "tycho-release/tycho-versions-plugin/src/main/java/org/eclipse/tycho/versions/engine/ProjectMetadataReader.java",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 32961
      },
      "writtenOn": "2016-12-13T12:44:16Z",
      "side": 1,
      "message": "Yes that\u0027s right, but the MavenProjects from the MavenSession are only the ones from the reactor. The set-version plugin does also support changing pom files e.g. within non active maven profiles (see getChildren Method in this class).\n\nI tried to use the PolyglotModelManager to read the Model:\n\n        File polyglotPomFile \u003d modelManager.locatePom(basedir);\n        Map\u003cString, File\u003e options \u003d new HashMap\u003c\u003e();\n        options.put(ModelProcessor.SOURCE, polyglotPomFile);\n        Model model \u003d modelManager.getReaderFor(options).read(polyglotPomFile, options);\n\nThat does work fine, but only if I add the tycho-extras pomless maven plugin as a dependency for the tycho-version plugin. The reason is, that the TychoMapping/TychoModelReader are only injected if that dependency exists, which we might not want - right?",
      "parentUuid": "a7c23755_e6dcfc5b",
      "range": {
        "startLine": 66,
        "startChar": 8,
        "endLine": 66,
        "endChar": 9
      },
      "revId": "c0d334b480a70b30313bea7b39e081dd1931363c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_bc805050",
        "filename": "tycho-release/tycho-versions-plugin/src/main/java/org/eclipse/tycho/versions/engine/ProjectMetadataReader.java",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 434
      },
      "writtenOn": "2016-12-13T12:53:56Z",
      "side": 1,
      "message": "does not sound straightforward neither.\n\nIf you use the code as proposed now, I guess it works but I wonder if the user would get confusing messages about .polyglot.build.properties files being updated which are supposed to be hidden/temporary and will be deleted on VM exit anyway?",
      "parentUuid": "a7c23755_1cbce422",
      "range": {
        "startLine": 66,
        "startChar": 8,
        "endLine": 66,
        "endChar": 9
      },
      "revId": "c0d334b480a70b30313bea7b39e081dd1931363c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_8ffd18a6",
        "filename": "tycho-release/tycho-versions-plugin/src/main/java/org/eclipse/tycho/versions/engine/ProjectMetadataReader.java",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 32961
      },
      "writtenOn": "2016-12-13T13:26:05Z",
      "side": 1,
      "message": "Well, we need at least the artifactId, groupId, version and packaging and parent coordinates for each project the version should be changed. I thought using the PolyglotModelManager to get this information and store the Model in the projectmetadata map. This model would be used at any place where we need artifactid, groupid, version or the packaging type. The PomManipluator would only come into play if there is a \"real\" pom file available. So IMHO the message about changing polyglot files would not appear. \n\nDo you think it would be better to get the artifactId, groupId the same way as it is done in the pomless TychoModelReader class? But than that\u0027s kind of code duplication we are doing for the tycho-version plugin.\n\nSo the code to read the model and the pom would look like that:\n\nProjectMetadata project \u003d new ProjectMetadata(basedir);\n        projects.put(basedir, project);\n\n        File polyglotPomFile \u003d modelManager.locatePom(basedir);\n        Map\u003cString, File\u003e options \u003d new HashMap\u003c\u003e();\n        options.put(ModelProcessor.SOURCE, polyglotPomFile);\n        Model model \u003d modelManager.getReaderFor(options).read(polyglotPomFile, options);\n\n        project.putMetadata(model);\n\n        File pomFile \u003d new File(basedir, MutablePomFile.POM_XML);\n\n        if (pomFile.exists()) {\n            MutablePomFile pom \u003d MutablePomFile.read(pomFile);\n            project.putMetadata(pom);\n            String packaging \u003d pom.getPackaging();\n            if (PACKAGING_POM.equals(packaging)) {\n                for (File child : getChildren(basedir, pom)) {\n                    addBasedir(child);\n                }\n            }\n        }",
      "parentUuid": "a7c23755_bc805050",
      "range": {
        "startLine": 66,
        "startChar": 8,
        "endLine": 66,
        "endChar": 9
      },
      "revId": "c0d334b480a70b30313bea7b39e081dd1931363c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_8f56f8a1",
        "filename": "tycho-release/tycho-versions-plugin/src/main/java/org/eclipse/tycho/versions/engine/ProjectMetadataReader.java",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 434
      },
      "writtenOn": "2016-12-13T15:09:07Z",
      "side": 1,
      "message": "my point  was, this is getting more and more complicated so your original approach with hardcoded pom filename looks easier compared to it.\n\nIf we cannot make it work in a way that simply ignores non-existing pom files, then your original approach is the next best approximation I guess.\n\nThe only thing I would find confusing is if the user would get info messages about pom files being changed that are temporary and deleted before the build process exits.",
      "parentUuid": "a7c23755_8ffd18a6",
      "range": {
        "startLine": 66,
        "startChar": 8,
        "endLine": 66,
        "endChar": 9
      },
      "revId": "c0d334b480a70b30313bea7b39e081dd1931363c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}