/*******************************************************************************
 * Copyright (c) 2020, 2021 Christoph Läubrich and others.
 * This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     Christoph Läubrich - initial API and implementation
 *******************************************************************************/
package org.eclipse.tycho.test.target;

import static org.junit.Assert.assertFalse;

import java.nio.file.Files;
import java.nio.file.Path;

import org.apache.maven.it.Verifier;
import org.eclipse.tycho.test.AbstractTychoIntegrationTest;
import org.junit.Ignore;
import org.junit.Test;

public class TargetPlatformLocationsTest extends AbstractTychoIntegrationTest {

	@Test
	public void testMavenLocation() throws Exception {
		Verifier verifier = getVerifier("target.maven", false, true);
		verifier.executeGoal("verify");
		verifier.verifyErrorFreeLog();
	}

	@Test
	public void testMavenArtifactHaveMavenRepoPath() throws Exception {
		Verifier verifier = getVerifier("target.maven", false, true);
		verifier.addCliOption("-DoutputAbsoluteArtifactFilename=true");
		verifier.executeGoal("dependency:list");
		verifier.verifyErrorFreeLog();
		assertFalse("Location for Maven deps should not resolve to cache",
				Files.readString(Path.of(verifier.getBasedir(), verifier.getLogFileName())).contains("p2/osgi"));
	}

	@Test
	public void testMavenArtifactHaveMavenDepsCoordinates() throws Exception {
		Verifier verifier = getVerifier("target.maven", false, true);
		verifier.executeGoal("dependency:list");
		verifier.verifyErrorFreeLog();
		verifier.verifyTextInLog("commons-lang:commons-lang:jar:2.4:system"); // this is a weak assert, should
																				// be
		// improved
	}

	@Test
	public void testMavenLocationMulti() throws Exception {
		Verifier verifier = getVerifier("target.mavenMulti", false, true);
		verifier.executeGoal("verify");
		verifier.verifyErrorFreeLog();
	}

	@Test
	@Ignore(value = "This test is flaky on the buildserver")
	public void testMavenLocationRepositories() throws Exception {
		Verifier verifier = getVerifier("target.mavenRepos", false, true);
		verifier.executeGoal("verify");
		verifier.verifyErrorFreeLog();
	}

	public void testDirectoryLocation() throws Exception {
		Verifier verifier = getVerifier("target.directory", false, true);
		verifier.executeGoal("verify");
		verifier.verifyErrorFreeLog();
	}

	@Test
	public void testMavenLocationAutogeneratedFeature() throws Exception {
		Verifier verifier = getVerifier("target.maven.autofeature", false, true);
		verifier.executeGoal("verify");
		verifier.verifyErrorFreeLog();
	}

}
